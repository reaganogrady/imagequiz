{"version":3,"sources":["comms/api.js","components/home.js","components/login.js","components/score.js","components/question.js","components/quiz.js","App.js","reportWebVitals.js","index.js"],"names":["address","api","getQuizzes","fetch","then","response","json","getFlowers","addScore","score","method","headers","body","JSON","stringify","Home","props","history","useHistory","useState","flowers","setFlowers","useEffect","length","x","catch","e","console","log","setQuiz","event","gotoQuiz","target","id","push","output","i","ListGroup","Item","src","picture","onClick","alt","name","Login","user","setUser","pass","setPass","Form","className","onSubmit","trim","onLoggedIn","Group","Label","Control","type","placeholder","onChange","value","Button","Score","Jumbotron","variant","retry","home","Question","quizzes","setQuizzes","createQue","quizID","queNum","curr","choices","j","Check","label","clicked","newAnswer","answer","Quiz","answers","setAnswers","setScore","userAnswers","setUserAnswers","temp","checkAnswers","addAnswer","newAnswers","slice","addChecked","newUserAnswers","App","localStorage","getItem","setQuizID","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","to","setItem","exact","path","component","username","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4c8c7b6.chunk.js","sourcesContent":["let address = \"https://reaganogrady-imagequiz.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(address + \"/flowers\")\r\n    .then(response => response.json());\r\n};\r\n\r\nlet getQuizzes = () => {\r\n    return fetch(address + \"/quizzes\")\r\n    .then(response => response.json());\r\n};\r\n\r\nlet addScore = (score) => {\r\n    return fetch(address + '/score', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body : JSON.stringify(score)\r\n    });\r\n}\r\n\r\nlet api = {\r\n    getQuizzes : getQuizzes,\r\n    getFlowers : getFlowers,\r\n    addScore : addScore\r\n};\r\n\r\nexport default api;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport api from '../comms/api';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Home(props) {\r\n    const history = useHistory();\r\n    const [flowers, setFlowers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (flowers.length === 0) {\r\n            api.getFlowers().then(x => setFlowers(x)).catch(e => console.log(e));\r\n        }\r\n    });\r\n\r\n    let setQuiz = (event) => {\r\n        props.gotoQuiz(event.target.id);\r\n        history.push('/quiz');\r\n    }\r\n\r\n    const output = [];\r\n    for (var i = 0; i < flowers.length; i++) {\r\n        output.push(\r\n            <ListGroup.Item>\r\n                <img src={flowers[i].picture} id={i} onClick={setQuiz} alt={flowers[i].name}></img>\r\n                <p> {flowers[i].name} </p>\r\n            </ListGroup.Item>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <ListGroup>\r\n            {output}\r\n       </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Home;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nfunction Login(props) {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState('');\r\n    const [pass, setPass] = useState('');\r\n\r\n    let onLoginSubmitted = () => {\r\n        // Influenced by lecture\r\n        if (user.trim().length === 0 || pass.trim().length === 0) {\r\n            return;\r\n        }\r\n        props.onLoggedIn(user);\r\n        history.push('/');\r\n    }\r\n\r\n    let onSetUser = (event) =>{\r\n        setUser(event.target.value);\r\n    }\r\n\r\n    let onSetPass = (event) =>{\r\n        setPass(event.target.value);\r\n    }\r\n\r\n    return(\r\n    <Form className=\"login\" onSubmit={onLoginSubmitted}>\r\n        <h1> LOGIN</h1>\r\n        <Form.Group>\r\n          <Form.Label>Email Address</Form.Label> \r\n          <Form.Control type=\"email\" placeholder=\"Email\" onChange ={onSetUser}/>\r\n        </Form.Group>\r\n        <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange ={onSetPass}/>\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n    </Form>\r\n    );\r\n}\r\n\r\nexport default Login;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nfunction Score(props) {\r\n    return(\r\n        <Jumbotron>\r\n        <h1> Your score: {props.score} </h1>\r\n        <br></br>\r\n        <Button type = \"submit\" variant=\"dark\" onClick={props.retry()}> Retry Quiz </Button>\r\n        \r\n        <p></p>\r\n        <Button type= \"submit\" variant = \"light\" onClick={props.home()}>Home</Button>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Score;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport { Form } from 'react-bootstrap';\r\nimport api from '../comms/api';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Question(props) {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    var output = [];\r\n\r\n    useEffect(() => {\r\n        if (quizzes.length === 0){\r\n                api.getQuizzes()\r\n                .then(x => createQue(x))\r\n                .catch(e => console.log(e));\r\n        }\r\n    });\r\n    \r\n    let createQue = (x) => {\r\n        setQuizzes(x);\r\n      \r\n        var quizzes = x;\r\n        if (quizzes.length > 0){\r\n            var quizID = props.quizID;\r\n            var queNum = props.queNum;\r\n            var curr = quizzes[quizID];\r\n           \r\n            var choices = curr[queNum].choices;\r\n            \r\n            output.push(\r\n                <div>\r\n                <h2> Question {queNum+1}</h2> \r\n                <img src = {curr[queNum].picture} alt={\"Question\"}></img>\r\n                </div>\r\n            );\r\n\r\n            for (var j = 0; j < choices.length; j++) { \r\n                output.push(\r\n                    <Form.Check type={'radio'} label={choices[j]} id={choices[j]} \r\n                    name={choices[j]} onClick= {props.clicked(choices[j], queNum)} \r\n                    />\r\n                );\r\n            }\r\n            \r\n            props.newAnswer(curr[queNum].answer, queNum);\r\n            output.push(<br/>);\r\n            console.log(output);\r\n            return( \r\n                <div>\r\n                    {output}\r\n                </div>\r\n                );\r\n        } \r\n        else {\r\n        }\r\n    }\r\n    \r\n    return( \r\n        <div>\r\n            {output}\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Question;","import 'bootstrap/dist/css/bootstrap.css'\r\nimport Score from './score';\r\nimport Question from './question';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Quiz(props) {\r\n    const [answers, setAnswers] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    let retry = () => {\r\n        history.push('/quiz');\r\n    }\r\n\r\n    let home = () => {\r\n        history.push('/home');\r\n    }\r\n\r\n    let checkAnswers = () => {\r\n        var temp = 0;\r\n        for (let i = 0; i < answers; i++){\r\n            if (userAnswers === answers[i]) {\r\n                temp +=1;\r\n            }\r\n        }\r\n        setScore(temp);\r\n    }\r\n\r\n    let onSubmit = () => {\r\n        checkAnswers();\r\n        <Score onRetry = { retry } onHome = { home } userScore = {score} />\r\n    }\r\n\r\n    let addAnswer = (answer, queNum) => {\r\n        var newAnswers = answers.slice();\r\n        newAnswers[queNum] = answer;\r\n        setAnswers(newAnswers);\r\n    }\r\n\r\n    let addChecked = (answer, queNum) => {\r\n        var newUserAnswers =  userAnswers.slice();\r\n        newUserAnswers[queNum] = answer;\r\n        setUserAnswers(newUserAnswers);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <Question quizID={props.quizID} queNum={0} clicked = { addChecked } newAnswer = {addAnswer} />   \r\n            <Question quizID={props.quizID} queNum={1} clicked = { addChecked } newAnswer = {addAnswer} />\r\n            <Question quizID={props.quizID} queNum={2} clicked = { addChecked } newAnswer = {addAnswer} />\r\n            <Question quizID={props.quizID} queNum={3} clicked = { addChecked } newAnswer = {addAnswer}/>\r\n            <Question quizID={props.quizID} queNum={4} clicked = { addChecked } newAnswer = {addAnswer} />\r\n            <Question quizID={props.quizID} queNum={5} clicked = { addChecked } newAnswer = {addAnswer} />\r\n        <Button variant=\"primary\" type = \"submit\" onSubmit = { onSubmit }> Submit </Button>\r\n        </Form>\r\n    );\r\n\r\n}\r\nexport default Quiz; ","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Home from './components/home.js';\r\nimport Login from './components/login';\r\nimport Quiz from './components/quiz';\r\nimport Score from './components/score';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(localStorage.getItem('user') || '');\r\n  const [quizID, setQuizID] = useState(localStorage.getItem('quizID') || 0);\r\n\r\n  let gotoQuiz = (quizID) => {\r\n    localStorage.setItem('quizID', quizID);\r\n    setQuizID(quizID);\r\n  }\r\n\r\n  let onLoggedIn = (username) => {\r\n    localStorage.setItem('user', username);\r\n    setUser(username);\r\n  }\r\n\r\n  let logOut = () => {\r\n    setUser('');\r\n    localStorage.setItem('user', '');\r\n  }\r\n\r\n\r\n  return (\r\n   <HashRouter>\r\n       <Navbar bg =\"light\">\r\n            <Navbar.Brand>Image Quiz</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className =\"mr-auto\">\r\n                <Nav.Link>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  {user === '' ?\r\n                    <Link className='link' to=\"/login\">Login</Link>\r\n                    :\r\n                    <Link className='link' onClick={logOut}>Logout</Link>\r\n                  }\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\"> <Home gotoQuiz={gotoQuiz}/> </Route>\r\n          <Route path=\"/quiz\"> <Quiz quizID={quizID} /> </Route>\r\n          <Route path=\"/score\" component = { Score } />\r\n          <Route path =\"/login\"> <Login onLoggedIn ={onLoggedIn}/></Route>\r\n        </Switch>\r\n   </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}